[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
[New Thread 0x7fffd2ffa700 (LWP 15961)]

Thread 1 "FreeCAD" received signal SIGSEGV, Segmentation fault.
cc_memalloc_deallocate (allocator=0x7838342f65730000, ptr=ptr@entry=0x8be7c0) at memalloc.cpp:215
215	memalloc.cpp: Datei oder Verzeichnis nicht gefunden.
#0  cc_memalloc_deallocate (allocator=0x7838342f65730000, ptr=ptr@entry=0x8be7c0) at memalloc.cpp:215
        newfree = 0x8be7c0
#1  0x00007ffff41d0e46 in SbHash<char const*, short>::SbHashEntry::operator delete (ptr=0x8be7c0) at ../../src/misc/SbHash.h:144
        entry = 0x8be7c0
#2  SbHash<char const*, short>::resize (newsize=<optimized out>, this=0x8d0ff0) at ../../src/misc/SbHash.h:444
        preventry = 0x8be7c0
        entry = 0x8c0950
        oldsize = <optimized out>
        oldbuckets = 0xd0a6d0
        i = <optimized out>
#3  SbHash<char const*, short>::put (obj=<optimized out>, key=<optimized out>, this=0x8d0ff0) at ../../src/misc/SbHash.h:473
        key = <optimized out>
        obj = <optimized out>
        this = 0x8d0ff0
        entry = <optimized out>
#4  SoType::createType (parent=..., name=..., method=method@entry=0x7ffff40e8780 <SoGLCacheContextElement::createInstance()>, data=data@entry=0) at SoType.cpp:305
        discard = <optimized out>
        newType = {index = 192, static typedatalist = 0xd328c0}
        typeData = <optimized out>
#5  0x00007ffff40e882b in SoGLCacheContextElement::initClass () at SoGLCacheContextElement.cpp:168
        __PRETTY_FUNCTION__ = "static void SoGLCacheContextElement::initClass()"
#6  0x00007ffff40c627f in SoElement::initElements () at SoElement.cpp:459
No locals.
#7  0x00007ffff40c639f in SoElement::initClass () at SoElement.cpp:516
        __PRETTY_FUNCTION__ = "static void SoElement::initClass()"
#8  0x00007ffff41b81d4 in SoDB::init () at SoDB.cpp:313
        __PRETTY_FUNCTION__ = "static void SoDB::init()"
        env = <optimized out>
#9  0x00007ffff73afd3e in Gui::Application::runApplication () at /usr/src/debug/freecad/src/Gui/Application.cpp:1662
        it = <optimized out>
        argc = 1
        mainApp = {<Gui::GUIApplication> = {<Gui::GUIApplicationNativeEventAware> = {<QApplication> = {<No data fields>}, static staticMetaObject = {d = {superdata = 0x7ffff644ef60 <QApplication::staticMetaObject>, stringdata = 0x7ffff7774740 <qt_meta_stringdata_Gui__GUIApplicationNativeEventAware> "Gui::GUIApplicationNativeEventAware", data = 0x7ffff7774780 <qt_meta_data_Gui__GUIApplicationNativeEventAware>, extradata = 0x7ffff7d78a60 <Gui::GUIApplicationNativeEventAware::staticMetaObjectExtraData>}}, static staticMetaObjectExtraData = {objects = 0x0, static_metacall = 0x7ffff73f5100 <Gui::GUIApplicationNativeEventAware::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)>}, spaceballPresent = false, mainWindow = 0x0, motionDataArray = {0, 0, -157374318, 32767, -11312, 32767}}, static staticMetaObject = {d = {superdata = 0x7ffff7d7c1c0 <Gui::GUIApplicationNativeEventAware::staticMetaObject>, stringdata = 0x7ffff7774400 <qt_meta_stringdata_Gui__GUIApplication> "Gui::GUIApplication", data = 0x7ffff7774420 <qt_meta_data_Gui__GUIApplication>, extradata = 0x7ffff7d78a50 <Gui::GUIApplication::staticMetaObjectExtraData>}}, static staticMetaObjectExtraData = {objects = 0x0, static_metacall = 0x7ffff73f39f0 <Gui::GUIApplication::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)>}, caughtException = {px = 0x0, pn = {pi_ = 0x0}}}, static staticMetaObject = {d = {superdata = 0x7ffff7d7c0a0 <Gui::GUIApplication::staticMetaObject>, stringdata = 0x7ffff7774300 <qt_meta_stringdata_Gui__GUISingleApplication> "Gui::GUISingleApplication", data = 0x7ffff7774380 <qt_meta_data_Gui__GUISingleApplication>, extradata = 0x7ffff7d78a40 <Gui::GUISingleApplication::staticMetaObjectExtraData>}}, static staticMetaObjectExtraData = {objects = 0x0, static_metacall = 0x7ffff73f4cf0 <Gui::GUISingleApplication::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)>}, d_ptr = {d = 0x885520}}
        plugin = {static null = {<No data fields>}, static shared_null = {ref = {_q_value = 2192}, alloc = 0, size = 0, data = 0x6077fa <QString::shared_null+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, static shared_empty = {ref = {_q_value = 4}, alloc = 0, size = 0, data = 0x7ffff57868fa <QString::shared_empty+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, d = 0x93f290, static codecForCStrings = 0x0}
        qssPaths = {<QList<QString>> = {{p = {static shared_null = {ref = {_q_value = 1887}, alloc = 0, begin = 0, end = 0, sharable = 1, array = {0x0}}, d = 0x932760}, d = 0x932760}}, <No data fields>}
        version = {i = 4223}
        path = {static null = {<No data fields>}, static shared_null = {ref = {_q_value = 2192}, alloc = 0, size = 0, data = 0x6077fa <QString::shared_null+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, static shared_empty = {ref = {_q_value = 4}, alloc = 0, size = 0, data = 0x7ffff57868fa <QString::shared_empty+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, d = 0xa063e0, static codecForCStrings = 0x0}
        app = {signalNewDocument = {<boost::signal1<void, const Gui::Document&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::Document&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0xa01e20, pn = {pi_ = 0x976d60}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd750, _M_prev = 0x7fffffffd750}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalDeleteDocument = {<boost::signal1<void, const Gui::Document&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::Document&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0xa03210, pn = {pi_ = 0xa170b0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd780, _M_prev = 0x7fffffffd780}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalRelabelDocument = {<boost::signal1<void, const Gui::Document&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::Document&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0xac2be0, pn = {pi_ = 0x941500}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd7b0, _M_prev = 0x7fffffffd7b0}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalRenameDocument = {<boost::signal1<void, const Gui::Document&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::Document&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x941520, pn = {pi_ = 0x92f580}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd7e0, _M_prev = 0x7fffffffd7e0}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalActiveDocument = {<boost::signal1<void, const Gui::Document&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::Document&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x92f5a0, pn = {pi_ = 0x9402e0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd810, _M_prev = 0x7fffffffd810}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalNewObject = {<boost::signal1<void, const Gui::ViewProvider&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::ViewProvider&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x940300, pn = {pi_ = 0x948c20}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd840, _M_prev = 0x7fffffffd840}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalDeletedObject = {<boost::signal1<void, const Gui::ViewProvider&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::ViewProvider&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x948c40, pn = {pi_ = 0x96a0e0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd870, _M_prev = 0x7fffffffd870}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalChangedObject = {<boost::signal2<void, const Gui::ViewProvider&, const App::Property&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::ViewProvider&, const App::Property&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x96a100, pn = {pi_ = 0x91a750}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd8a0, _M_prev = 0x7fffffffd8a0}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalRelabelObject = {<boost::signal1<void, const Gui::ViewProvider&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::ViewProvider&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x979e80, pn = {pi_ = 0x979fd0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd8d0, _M_prev = 0x7fffffffd8d0}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalActivatedObject = {<boost::signal1<void, const Gui::ViewProvider&, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::ViewProvider&)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x979ff0, pn = {pi_ = 0x93f3a0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd900, _M_prev = 0x7fffffffd900}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalActivateWorkbench = {<boost::signal1<void, char const*, boost::last_value<void>, int, std::less<int>, boost::function<void(char const*)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x93f3c0, pn = {pi_ = 0x93f510}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd930, _M_prev = 0x7fffffffd930}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalAddWorkbench = {<boost::signal1<void, char const*, boost::last_value<void>, int, std::less<int>, boost::function<void(char const*)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x93f530, pn = {pi_ = 0x9323e0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd960, _M_prev = 0x7fffffffd960}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalRemoveWorkbench = {<boost::signal1<void, char const*, boost::last_value<void>, int, std::less<int>, boost::function<void(char const*)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x932400, pn = {pi_ = 0x91dfd0}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd990, _M_prev = 0x7fffffffd990}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, signalActivateView = {<boost::signal1<void, const Gui::MDIView*, boost::last_value<void>, int, std::less<int>, boost::function<void(const Gui::MDIView*)> >> = {<boost::signals::detail::signal_base> = {<boost::noncopyable_::noncopyable> = {<No data fields>}, impl = {px = 0x977040, pn = {pi_ = 0x977190}}}, <boost::signals::trackable> = {connected_signals = {<std::__cxx11::_List_base<boost::signals::connection, std::allocator<boost::signals::connection> >> = {_M_impl = {<std::allocator<std::_List_node<boost::signals::connection> >> = {<__gnu_cxx::new_allocator<std::_List_node<boost::signals::connection> >> = {<No data fields>}, <No data fields>}, _M_node = {<std::__detail::_List_node_base> = {_M_next = 0x7fffffffd9c0, _M_prev = 0x7fffffffd9c0}, _M_storage = {_M_storage = "\000\000\000\000\000\000\000"}}}}, <No data fields>}, dying = false}, <No data fields>}, <No data fields>}, static Instance = 0x7fffffffd740, static Methods = 0x7ffff7dcfaa0 <Gui::Application::Methods>, d = 0x973260, _pcWorkbenchDictionary = 0x7fffe2642a28}
        mw = {<QMainWindow> = {<No data fields>}, static staticMetaObject = {d = {superdata = 0x7ffff6474de0 <QMainWindow::staticMetaObject>, stringdata = 0x7ffff7a7bf60 <qt_meta_stringdata_Gui__MainWindow> "Gui::MainWindow", data = 0x7ffff7a7c220 <qt_meta_data_Gui__MainWindow>, extradata = 0x7ffff7d79720 <Gui::MainWindow::staticMetaObjectExtraData>}}, static staticMetaObjectExtraData = {objects = 0x0, static_metacall = 0x7ffff7685aa0 <Gui::MainWindow::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)>}, static instance = 0x7fffffffd130, d = 0xa53320}
        hDocGrp = {_toHandle = 0x9602a0}
        timeout = <optimized out>
        hGrp = {_toHandle = 0x76d7f0}
        size = <optimized out>
        home = {static null = {<No data fields>}, static shared_null = {ref = {_q_value = 2192}, alloc = 0, size = 0, data = 0x6077fa <QString::shared_null+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, static shared_empty = {ref = {_q_value = 4}, alloc = 0, size = 0, data = 0x7ffff57868fa <QString::shared_empty+26>, clean = 0, simpletext = 0, righttoleft = 0, asciiCache = 0, capacity = 0, reserved = 0, array = {0}}, d = 0x7fffffffd0a8, static codecForCStrings = 0x0}
        hidden = <optimized out>
        start = {static npos = 18446744073709551615, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0xffffffffffffffff <error: Cannot access memory at address 0xffffffffffffffff>}, _M_string_length = 140737329997848, {_M_local_buf = "\320\323\377\377\377\177\000\000\360@\216\366\377\177\000", _M_allocated_capacity = 140737488344016}}
        wb = {<QList<QString>> = {{p = {static shared_null = {ref = {_q_value = 1887}, alloc = 0, begin = 0, end = 0, sharable = 1, array = {0x0}}, d = 0x0}, d = 0x0}}, <No data fields>}
        mdi = <optimized out>
        style = {static npos = 18446744073709551615, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x7fffffffd2f4 ""}, _M_string_length = 140737331020301, {_M_local_buf = "\020)\372\367\377\177\000\000\000\000\000\000\000\000\000", _M_allocated_capacity = 140737353754896}}
#10 0x00000000004033af in main (argc=<optimized out>, argv=<optimized out>) at /usr/src/debug/freecad/src/Main/MainGui.cpp:235
        stdcout = {<std::basic_streambuf<char, std::char_traits<char> >> = {_vptr.basic_streambuf = 0x6075a0 <vtable for Base::RedirectStdOutput+16>, _M_in_beg = 0x0, _M_in_cur = 0x0, _M_in_end = 0x0, _M_out_beg = 0x0, _M_out_cur = 0x0, _M_out_end = 0x0, _M_buf_locale = {static none = 0, static ctype = 1, static numeric = 2, static collate = 4, static time = 8, static monetary = 16, static messages = 32, static all = 63, _M_impl = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_classic = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_global = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_categories = 0x7ffff527ffc0 <__gnu_cxx::category_names>, static _S_once = 2, static _S_twinned_facets = 0x7ffff5281760 <std::locale::_S_twinned_facets>}}, buffer = {static npos = 18446744073709551615, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x7a7b60 ""}, _M_string_length = 0, {_M_local_buf = "P", '\000' <repeats 14 times>, _M_allocated_capacity = 80}}}
        stdclog = {<std::basic_streambuf<char, std::char_traits<char> >> = {_vptr.basic_streambuf = 0x607810 <vtable for Base::RedirectStdLog+16>, _M_in_beg = 0x0, _M_in_cur = 0x0, _M_in_end = 0x0, _M_out_beg = 0x0, _M_out_cur = 0x0, _M_out_end = 0x0, _M_buf_locale = {static none = 0, static ctype = 1, static numeric = 2, static collate = 4, static time = 8, static monetary = 16, static messages = 32, static all = 63, _M_impl = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_classic = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_global = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_categories = 0x7ffff527ffc0 <__gnu_cxx::category_names>, static _S_once = 2, static _S_twinned_facets = 0x7ffff5281760 <std::locale::_S_twinned_facets>}}, buffer = {static npos = 18446744073709551615, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x7a7bc0 ""}, _M_string_length = 0, {_M_local_buf = "P\000\000\000\000\000\000\000@\000\000\000@\000\000", _M_allocated_capacity = 80}}}
        stdcerr = {<std::basic_streambuf<char, std::char_traits<char> >> = {_vptr.basic_streambuf = 0x607620 <vtable for Base::RedirectStdError+16>, _M_in_beg = 0x0, _M_in_cur = 0x0, _M_in_end = 0x0, _M_out_beg = 0x0, _M_out_cur = 0x0, _M_out_end = 0x0, _M_buf_locale = {static none = 0, static ctype = 1, static numeric = 2, static collate = 4, static time = 8, static monetary = 16, static messages = 32, static all = 63, _M_impl = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_classic = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_global = 0x7ffff528d640 <(anonymous namespace)::c_locale_impl>, static _S_categories = 0x7ffff527ffc0 <__gnu_cxx::category_names>, static _S_once = 2, static _S_twinned_facets = 0x7ffff5281760 <std::locale::_S_twinned_facets>}}, buffer = {static npos = 18446744073709551615, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, _M_p = 0x7a7c20 ""}, _M_string_length = 0, {_M_local_buf = "P\000\000\000\000\000\000\000\002\000\000\000\000\000\000", _M_allocated_capacity = 80}}}
        oldcout = 0x7ffff528b6e0 <__gnu_internal::buf_cout_sync>
        oldclog = 0x7ffff528b620 <__gnu_internal::buf_cerr_sync>
        oldcerr = 0x7ffff528b620 <__gnu_internal::buf_cerr_sync>
